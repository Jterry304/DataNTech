parameters:
- name: clean
  type: boolean
  default: false
# preSteps
- name: preSteps
  type: stepList
  default: []
- name: checkout
  type: string
  default: self
- name: submodules
  type: string
  default: false
- name: download
  type: string
  default: current
- name: downloadArtifact
  type: string
  default: ''
# postSteps
- name: postSteps
  type: stepList
  default: []
- name: publish
  type: string
  default: '$(Common.TestResultsDirectory)'
- name: publishArtifact
  type: string
  default: '$(Build.DefinitionName)_$(System.JobName)'
# Use dotNet
- name: dotNetType
  type: string
  default: sdk
  values:
  - sdk
  - runtime
- name: dotNetVersion
  type: string
  default: '3.1.x'
# dotNet Build and Restore Params
- name: dotNetProjects # dotNet projects or vs solution for dotNet build and restore
  type: string
- name: dotNetFeed # default dotNet artifact feed
  type: string
  default: ''
- name: dotNetArguments # default dotNet build arguments
  type: string
  default: ''
- name: dotNetCommand
  type: string
  default: restore
  values:
  - restore
  - build
  - publish
# dotNet Test Tasks for each test in dotNetTests
- name: dotNetTests # Inserts dotnet test for each item in list, project key required
  type: object
  default:
  - projects: '**[Uu]nit.[Tt]est*/*[Uu]nit.[Tt]est*.csproj' # Pattern search for unit test projects
    arguments: '--collect "Code Coverage" /p:CollectCoverage=true  /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Common.TestResultsDirectory)\Coverage\'
    displayName: 'dotNet Unit Tests'
  - projects: '**[Cc][Ll][Ii].[Tt]est*/*[Cc][Ll][Ii].[Tt]est*.csproj' # Pattern search for cli test projects
    arguments: '--collect "Code Coverage" /p:CollectCoverage=true  /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Common.TestResultsDirectory)\Coverage\'
    displayName: 'dotNet CLI Tests'

steps:
- template: ../preSteps.yaml
  parameters:
    clean: ${{ parameters.clean }}
    checkout: ${{ parameters.checkout }}
    submodules: ${{ parameters.submodules }}
    download: ${{ parameters.download }}
    artifact: ${{ parameters.downloadArtifact }}
    preSteps: ${{ parameters.preSteps }}
- ${{ if parameters.dotNetProjects }}:
  - template: dotNetCore.yaml
    parameters:
      clean: false
      checkout: false
      download: false
      dotNetCommand: ${{ parameters.dotNetCommand }}
      dotNetType: ${{ parameters.dotNetType }}
      dotNetVersion: ${{ parameters.dotNetVersion }}
      dotNetProjects: ${{ parameters.dotNetProjects }}
      dotNetFeed: ${{ parameters.dotNetFeed }}
      dotNetArguments: ${{ parameters.dotNetArguments }}
- ${{ if gt(length(parameters.dotNetTests), 0) }}:
  - ${{ each test in parameters.dotNetTests }}:
    - ${{ if test.projects }}:
      - task: DotNetCoreCLI@2
        ${{ if test.displayName }}:
          displayName: ${{ test.displayName }}
        ${{ if not(test.displayName) }}:
          displayName: 'dotNet Test ${{ test.projects }}'
        inputs:
          command: test
          projects: '${{ test.projects }}'
          ${{ if test.arguments }}:
            arguments: '${{ test.arguments }}'
          ${{ if not(test.arguments) }}:
            arguments: '--collect "Code Coverage"'
          ${{ if ne(test.publishTestResults, '') }}:
            publishTestResults: ${{ test.publishTestResults }}
          ${{ if eq(test.publishTestResults, '') }}:
            publishTestResults: true
          ${{ if test.testRunTitle }}:
            testRunTitle: ${{ test.testRunTitle }}
- template: ../postSteps.yaml
  parameters:
    postSteps: ${{ parameters.postSteps }}
    publish: ${{ parameters.publish }}
    artifact: ${{ parameters.publishArtifact }}
    clean: ${{ parameters.clean }}
