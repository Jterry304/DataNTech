parameters:
- name: clean
  type: boolean
  default: false
# preSteps
- name: preSteps
  type: stepList
  default: []
- name: checkout
  type: string
  default: self
- name: submodules
  type: string
  default: false
- name: download
  type: string
  default: current
- name: downloadArtifact
  type: string
  default: ''
# postSteps
- name: postSteps
  type: stepList
  default: []
- name: publishArtifact
  type: string
  default: '$(Build.BuildNumber)_$(System.StageName)_$(Agent.JobName)'
- name: publishEnabled # Publish a pipeline artifact of build and pack outputDir
  type: boolean
  default: true
# dotNet type and version
- name: packageType
  type: string
  default: sdk
  values:
  - sdk
  - runtime
- name: version
  type: string
  default: ''
# dotNet Restore and Build
- name: projects # Optional file match pattern to build or publish projects
  type: string
  default: ''
- name: command
  type: string
  default: build
  values:
  - build
  - publish
- name: arguments 
  type: string
  default: ''
- name: feedRestore # feed for dotNet restore
  type: string
  default: ''
- name: externalEndpoints
  type: string
  default: ''
- name: includeNuGetOrg
  type: boolean
  default: true
# dotNet Pack
- name: searchPatternPack # Required to enable pack. Pattern to search for csproj or nuspec files. Separate multiple patterns with semicolon. Exclude patterns with a ! prefix e.g. **/*.csproj;!**/*.Tests.csproj
  type: string
  default: ''
- name: searchPatternPush # enables dotNet push after dotNet pack
  type: string
  default: '$(Build.ArtifactStagingDirectory)/*.nupkg'
- name: feedPublish # dotNet push feed to publish of dotNet pack output NuGet package
  type: string
  default: ''
- name: includeSymbols # dotNet pack includeSymbols
  type: boolean
  default: false
- name: publishSymbols # Enable Publish Symbols task after dotNet pack
  type: boolean
  default: false
- name: versioningScheme # byEnvVar is default, set value or EnvVar
  type: string
  default: byEnvVar
  values:
  - off
  - byPrereleaseNumber
  - byEnvVar
  - byBuildNumber
- name: versionEnvVar # Name of environment variable to use for version number
  type: string
  default: NugetVersion
# dotNet Restore, Build, Publish, Pack, and Push
- name: configuration
  type: string
  default: Release
- name: outputDir
  type: string
  default: '$(Build.ArtifactStagingDirectory)'

steps:
- template: ../preSteps.yaml
  parameters:
    clean: ${{ parameters.clean }}
    checkout: ${{ parameters.checkout }}
    submodules: ${{ parameters.submodules }}
    download: ${{ parameters.download }}
    artifact: ${{ parameters.downloadArtifact }}
    preSteps: ${{ parameters.preSteps }}
- ${{ if parameters.projects }}:
  - template: dotNetCore.yaml
    parameters:
      clean: false
      checkout: false
      download: false
      packageType: ${{ parameters.packageType }}
      version: ${{ parameters.version }}
      command: ${{ parameters.command }}
      configuration: ${{ parameters.configuration }}
      projects: ${{ parameters.projects }}
      arguments: ${{ parameters.arguments}}
      feedRestore: ${{ parameters.feedRestore }}
      outputDir: ${{ parameters.outputDir }}
      publishEnabled: false
- ${{ if parameters.searchPatternPack }}:
  - template: dotNetCore.yaml
    parameters:
      clean: false
      checkout: false
      download: false
      version: ''
      searchPatternPack: ${{ parameters.searchPatternPack }}
      searchPatternPush: '${{ parameters.searchPatternPush }}'
      configuration: ${{ parameters.configuration }}
      feedRestore: ${{ parameters.feedRestore }}
      feedPublish: ${{ parameters.feedPublish }}
      externalEndpoints: ${{ parameters.externalEndpoints }}
      includeSymbols: ${{ parameters.includeSymbols }}
      publishSymbols: ${{ parameters.publishSymbols }}
      versioningScheme: ${{ parameters.versioningScheme }}
      versionEnvVar: ${{ parameters.versionEnvVar }}
      outputDir: ${{ parameters.outputDir }}
      publishEnabled: false
- template: ../postSteps.yaml
  parameters:
    postSteps: ${{ parameters.postSteps }}
    ${{ if parameters.publishEnabled }}:
      artifact: '${{ parameters.publishArtifact }}'
      publish: '${{ parameters.outputDir }}'
    clean: ${{ parameters.clean }}
