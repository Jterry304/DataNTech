parameters:
# jobsLists
- name: code # jobsList inserted into codeAnalysis stage in codeStages
  type: jobList
  default: []
- name: build # jobsList inserted into devBuild stage in devStages
  type: jobList
  default: []
- name: deploy # deploymentList inserted into devDeploy stage in devStages
  type: deploymentList
  default: []
- name: promote # deploymentList inserted into devPromote stage in devStages
  type: deploymentList
  default: []
- name: test # jobList inserted into devTests stage in devStages
  type: jobList
  default: []
#
# stageList
- name: stages # Inserts each stage into stages
  type: stageList
  default:
  - stage: code # code jobList param inserted to this stage
    dependsOn: []
    condition: succeeded()
  - stage: build # build jobList param inserted to this stage
    dependsOn: code
    condition: succeeded()
  - stage: deploy # deploy jobList param inserted to this stage
    dependsOn: build
    condition: succeeded()
  - stage: promote # promote jobList param inserted to this stage
    dependsOn: deploy
    condition: succeeded()
  - stage: test # test jobList param inserted to this stage
    dependsOn: promote
    condition: succeeded()
- name: stageSuffix
  type: string
  default: '' # stage name suffix. e.g. Dev

stages:
# Insert each stage in the stages stageList param
- ${{ each stage in parameters.stages }}:
  # For each parameter name that matches a stage name
  - ${{ each parameter in parameters }}:
    # If parameter name equals stage name and has at least 1 job insert the stage
    - ${{ if and(eq(parameter.name, stage.stage), or(gt(length(parameter.value), 0), gt(length(stage.jobs), 0))) }}:
      - stage: '${{ stage.key }}${{ parameters.stageSuffix }}'
        ${{ if stage.condition }}:
          condition: ${{ stage.condition }}
        ${{ if stage.dependsOn }}:
          dependsOn: ${{ stage.dependsOn }}
        jobs:
          - ${{ parameter }} # inserts jobList or deploymentList into stage
          - ${{ if gt(length(stage.jobs), 0) }}:
            - ${{ stage.jobs }} # if stage in stages param has nested jobs insert them
